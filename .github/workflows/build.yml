# https://cn.dll-files.com

on:
  push:
defaults:
  run:
    shell: bash
jobs:
  build:
    runs-on: ${{ matrix.os }}
    # https://docs.github.com/zh/actions/using-jobs/choosing-the-runner-for-a-job#选择-github-托管的运行器
    strategy:
      matrix:
        include:
          - os: macos-13
          - os: windows-latest
    steps:
      # - name: "Print OS"
      #   if: runner.os == 'Windows'
      #   run: |
      #     echo %PROCESSOR_ARCHITECTURE%
      #     wmic cpu get AddressWidth
      #     wmic os get osarchitecture
      #   shell: cmd
      #     # OSArchitecture  
      #     # 64-bit        

      - uses: actions/checkout@v4
      - name: "Setup Flutter"
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true
      - run: flutter --version
        shell: bash

      - name: Get app name
        id: get-app-name
        run: |
          echo "app-name=$(grep 'name: ' pubspec.yaml | awk '{print $2}')" >> $GITHUB_OUTPUT
  
      - name: Check env
        run: |
          echo "app-name=${{ steps.get-app-name.outputs.app-name }}"

      - name: Build
        id: build
        run: |
          build_command=$(echo ${{ matrix.os }} | awk -F'-' '{print $1}')
          flutter build $build_command

          case $build_command in
            macos)
              artifact_directory="build/macos/Build/Products/Release"
              artifact_filename="${{ steps.get-app-name.outputs.app-name }}_macos.tar.gz"
              cd $artifact_directory
              tar -czf $artifact_filename ${{ steps.get-app-name.outputs.app-name }}.app
              ;;
            windows)
              artifact_directory="build/windows/x64/runner/Release"
              artifact_filename="${{ steps.get-app-name.outputs.app-name }}_windows.zip"
              cd $artifact_directory
              7z a -tzip $artifact_filename .
              ;;
              esac
          echo "artifact_path=${artifact_directory}/${artifact_filename}" >> $GITHUB_OUTPUT

          ls -al .
      # - name: Archive
      #   id: archive
      #   run: |
      #     case ${{ matrix.os }} in
      #       macos)
      #         tar -czf ${{ steps.get-app-name.outputs.app-name }}_macos.tar.gz ${{ steps.build.outputs.archive_path }}
      #         echo "artifact_path=${{ steps.get-app-name.outputs.app-name }}_macos.tar.gz" >> $GITHUB_OUTPUT
      #         ;;
      #       windows)
      #         7z a -tzip ${{ steps.get-app-name.outputs.app-name }}_windows.zip ${{ steps.build.outputs.archive_path }}
      #         echo "artifact_path=${{ steps.get-app-name.outputs.app-name }}_windows.zip" >> $GITHUB_OUTPUT
      #         ;;
      #     esac

      # - name: Release
      # uses: softprops/action-gh-release@v1
      # if: startsWith(github.ref, 'refs/tags/')
      # env:
      #   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # with:
      #   files: build/linux/x64/release/bundle/MacRecoveryX-${{github.ref_name}}-linux.zip

      - name: Send mail
        if: false
        uses: dawidd6/action-send-mail@v3
        with:
          connection_url: ${{secrets.MAIL_CONNECTION}}
          subject: Flutter CI
          body: "Build completed. file: ${{ steps.build.outputs.artifact_path }}"
          to: i@oo1.dev
          from: Flutter Build
          attachments: ${{ steps.build.outputs.artifact_path }}
          priority: high
